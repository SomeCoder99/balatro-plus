[manifest]
version = "1.0.0"
dump_lua = true
priority = 0

# Change SPLASH_LOGO
[[patches]]
[patches.regex]
target = "game.lua"
pattern = '''[ \t]*G\.SPLASH_LOGO = Sprite\(0, 0, 
[ \t]*13\*SC_scale, 
[ \t]*13\*SC_scale\*\(G.ASSET_ATLAS\["balatro"\]\.py/G.ASSET_ATLAS\["balatro"\]\.px\),
[ \t]*G\.ASSET_ATLAS\["balatro"\], \{x=0,y=0\}\)'''
position = "at"
payload = '''
local key = "balatro"
if BPlus.config.replace_splash_logo then
  key = "bplus_balatro_plus"
end

G.SPLASH_LOGO = Sprite(0, 0, 
  13*SC_scale, 
  13*SC_scale*(G.ASSET_ATLAS[key].py/G.ASSET_ATLAS[key].px),
  G.ASSET_ATLAS[key], {x=0,y=0})
'''

# Call modify_effect function when main scoring on played cards
[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "-- TARGET: main scoring on played cards"
position = "after"
match_indent = true
payload = """
if card.config.center.modify_effect then
  card.config.center:modify_effect(card, context, ret.playing_card)
end
"""

# Add some colors to loc_colour function
[[patches]]
[patches.pattern]
target = "functions/misc_functions.lua"
pattern = "G.ARGS.LOC_COLOURS = G.ARGS.LOC_COLOURS or {"
position = "after"
match_indent = true
payload = """
  eternal = G.C.ETERNAL,
  rental = G.C.RENTAL,
  bplus_sigil = G.C.SET.sigil,
"""

# Remove metatable from G.GAME.probabities for save table
[[patches]]
[patches.pattern]
target = "functions/misc_functions.lua"
pattern = "G.culled_table =  recursive_table_cull{"
position = "before"
match_indent = true
payload = """
local probabilities = G.GAME.probabilities
G.GAME.probabilities = G.GAME.real_probabilities
G.GAME.real_probabilities = nil
"""

[[patches]]
[patches.pattern]
target = "functions/misc_functions.lua"
pattern = "G.ARGS.save_run = G.culled_table"
position = "before"
match_indent = true
payload = """
G.GAME.real_probabilities = G.GAME.probabilities
G.GAME.probabilities = probabilities
"""

[[patches]]
[patches.pattern]
target = "game.lua"
pattern = "function Game:start_run(args)"
position = "after"
match_indent = true
payload = """
if args and args.savetext then
  BPlus.apply_metatable_to_probabilities(args.savetext.GAME)
end
"""

[[patches]]
[patches.pattern]
target = "functions/common_events.lua"
pattern = "if amt > 0 or amt < 0 then"
position = "before"
match_indent = true
payload = """
if extra then text = extra.message or text end
"""
